/*%FSM<COMPILE "F:\Steam\steamapps\common\Arma 3 Tools\FSMEditor\scriptedFSM.cfg, Download">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,250,-390.000000,-720.000000,-300.000000,-670.000000,0.000000,"init"};
item1[] = {"start_continue_d",2,250,-390.000000,-440.000000,-300.000000,-390.000000,0.000000,"start/continue" \n "download"};
item2[] = {"failed",4,218,-580.000000,-290.000000,-490.000000,-240.000000,2.000000,"failed"};
item3[] = {"succeeded",4,218,-180.000000,-290.000000,-90.000000,-240.000000,1.000000,"succeeded"};
item4[] = {"_",8,218,-390.000000,-650.000000,-300.000000,-600.000000,0.000000,""};
item5[] = {"invalid",4,218,-390.000000,-790.000000,-300.000000,-740.000000,1.000000,"invalid"};
item6[] = {"_",1,250,-390.000000,-860.000000,-300.000000,-810.000000,0.000000,""};
item7[] = {"__1",1,250,-580.000000,-220.000000,-490.000000,-170.000000,0.000000,""};
item8[] = {"__2",1,250,-180.000000,-220.000000,-90.000000,-170.000000,0.000000,""};
item9[] = {"",7,210,-539.000000,-419.000000,-531.000061,-411.000000,0.000000,""};
item10[] = {"",7,210,-138.999985,-419.000000,-131.000015,-411.000000,0.000000,""};
item11[] = {"paused",4,218,-310.000000,-370.000000,-220.000000,-320.000000,0.000000,"paused"};
item12[] = {"pause_download",2,250,-390.000000,-290.000000,-300.000000,-240.000000,0.000000,"pause" \n "download"};
item13[] = {"unpaused",4,218,-460.000000,-370.000000,-370.000000,-320.000000,0.000000,"unpaused"};
item14[] = {"post_init",2,4346,-390.000000,-580.000000,-300.000000,-530.000000,0.000000,"post" \n "init"};
item15[] = {"_",8,218,-390.000000,-510.000000,-300.000000,-460.000000,0.000000,""};
link0[] = {0,4};
link1[] = {0,5};
link2[] = {1,9};
link3[] = {1,10};
link4[] = {1,11};
link5[] = {2,7};
link6[] = {3,8};
link7[] = {4,14};
link8[] = {5,6};
link9[] = {9,2};
link10[] = {10,3};
link11[] = {11,12};
link12[] = {12,2};
link13[] = {12,3};
link14[] = {12,13};
link15[] = {13,1};
link16[] = {14,15};
link17[] = {15,1};
globals[] = {0.000000,0,0,0,0,640,480,1,585,6316128,1,-596.006470,-74.095490,-94.066589,-750.533752,799,1004,1};
window[] = {2,-1,-1,-1,-1,954,104,1544,104,3,817};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "Download";
        class States
        {
                /*%FSM<STATE "init">*/
                class init
                {
                        name = "init";
                        itemno = 0;
                        init = /*%FSM<STATEINIT""">*/"private [""_objective"", ""_object"", ""_player"", ""_downloadTime"", ""_maxDistance"", ""_isDestroyable"", ""_pauseTimeThreshold"", ""_isUpload""];" \n
                         "_objective					= [_this, 0, objNull, [objNull]] call BIS_fnc_param;" \n
                         "_object						= [_this, 1, objNull, [objNull]] call BIS_fnc_param;" \n
                         "_player 						= [_this, 2, objNull, [objNull]] call BIS_fnc_param;" \n
                         "_downloadTime 				= [_this, 3, 60, [0]] call BIS_fnc_param;" \n
                         "_maxDistance				= [_this, 4, 10, [0]] call BIS_fnc_param;" \n
                         "_isDestroyable				= [_this, 5, true, [true]] call BIS_fnc_param;" \n
                         "_pauseTimeThreshold		= [_this, 6, 5, [0]] call BIS_fnc_param;" \n
                         "_isUpload					= [_this, 7, false, [false]] call BIS_fnc_param;" \n
                         "" \n
                         "private [""_side"", ""_oppositeSide"", ""_bDownloading""];" \n
                         "_side				= side group _player;" \n
                         "_oppositeSide 	= [""GetOppositeSide"", [_side]] call BIS_fnc_moduleHvtObjectivesInstance;" \n
                         "_bDownloading 	= _object getVariable [""BIS_download_side"", sideUnknown] != sideUnknown;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "invalid">*/
                                class invalid
                                {
                                        itemno = 5;
                                        priority = 1.000000;
                                        to="_";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!isServer" \n
                                         "||" \n
                                         "{ isNull _object }" \n
                                         "||" \n
                                         "{ isNull _player }" \n
                                         "||" \n
                                         "{ !alive _player }" \n
                                         "||" \n
                                         "{ _bDownloading }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 4;
                                        priority = 0.000000;
                                        to="post_init";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "start_continue_d">*/
                class start_continue_d
                {
                        name = "start_continue_d";
                        itemno = 1;
                        init = /*%FSM<STATEINIT""">*/"// We might have came from pause, so set correct speed" \n
                         "_object setVariable [""BIS_download_speed"", 1.0, true];" \n
                         "" \n
                         "// Log" \n
                         "if (_object getVariable [""BIS_download_logEnabled"", true]) then" \n
                         "{" \n
                         "	[""Download.fsm / Start-Continue Download: %1 / %2 / %3"", _object, _player, _side] call BIS_fnc_logFormat;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "failed">*/
                                class failed
                                {
                                        itemno = 2;
                                        priority = 2.000000;
                                        to="__1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private [""_downloadSpeed"", ""_downloadPauseTimestamp"", ""_downloadPaused"", ""_pauseTime""];" \n
                                         "_downloadSpeed 					= _object getVariable [""BIS_download_speed"", 1.0];" \n
                                         "_downloadPauseTimestamp			= _object getVariable [""BIS_download_pauseTimestamp"", -1];" \n
                                         "_downloadPaused					= _downloadSpeed <= 0;" \n
                                         "_pauseTime							= time - _downloadPauseTimestamp;" \n
                                         "" \n
                                         "!isNil { _object getVariable ""BIS_hvt_intelDestroyed"" }" \n
                                         "||" \n
                                         "{ (!isNull _objective && !isNil { BIS_hvt_endGame }) }" \n
                                         "||" \n
                                         "{ _object getVariable [""BIS_download_aborted"", false] }" \n
                                         "||" \n
                                         "{ ( _downloadPauseTimestamp != -1 && _downloadPaused && _pauseTime > _pauseTimeThreshold) }" \n
                                         "||" \n
                                         "{ count ([_object, _maxDistance + 5, _side] call (_object getVariable ""BIS_download_getPlayers"")) < 1 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "succeeded">*/
                                class succeeded
                                {
                                        itemno = 3;
                                        priority = 1.000000;
                                        to="__2";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_object getVariable [""BIS_download_side"", sideUnknown] == _side" \n
                                         "&&" \n
                                         "{ _object getVariable [""BIS_download_progress"", 0.0] >= 1.0 }" \n
                                         "&&" \n
                                         "{ _object getVariable [""BIS_download_speed"", 0.0] > 0.0 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "paused">*/
                                class paused
                                {
                                        itemno = 11;
                                        priority = 0.000000;
                                        to="pause_download";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"count ([_object, _maxDistance, _side] call (_object getVariable ""BIS_download_getPlayers"")) < 1"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "_">*/
                class _
                {
                        name = "_";
                        itemno = 6;
                        init = /*%FSM<STATEINIT""">*/"// Log" \n
                         "[""Download.fsm: Server - %1 / Object - %2 / Player - %3 / Alive - %4 / Being Downloaded - %5"", isServer, _object, _player, alive _player, _bDownloading] call BIS_fnc_error;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__1">*/
                class __1
                {
                        name = "__1";
                        itemno = 7;
                        init = /*%FSM<STATEINIT""">*/"if (_isUpload) then" \n
                         "{" \n
                         "	// Reset uploading side" \n
                         "	missionNamespace setVariable [""BIS_upload_side"", nil, true];" \n
                         "	[true, ""onUploadStateChanged"", nil] remoteExec [""BIS_fnc_callScriptedEventHandler""];" \n
                         "" \n
                         "	// Set schematics state" \n
                         "	if ([""GetState""] call bis_fnc_moduleMPTypeHvt_carrier == ""Uploading"") then" \n
                         "	{" \n
                         "		[""SetState"", [""NeedsPickup""]] call bis_fnc_moduleMPTypeHvt_carrier;" \n
                         "	};" \n
                         "" \n
                         "	// Unlock schematics to the opposing side" \n
                         "	[""Unlock""] call bis_fnc_moduleMPTypeHvt_carrier;" \n
                         "};" \n
                         "" \n
                         "// Terminate thread" \n
                         "terminate (_object getVariable ""BIS_download_thread"");" \n
                         "" \n
                         "// Reset object variables" \n
                         "_object setVariable [""BIS_download_side"", nil, true];" \n
                         "_object setVariable [""BIS_download_progress"", nil, true];" \n
                         "_object setVariable [""BIS_download_speed"", nil, true];" \n
                         "_object setVariable [""BIS_download_rate"", nil];" \n
                         "_object setVariable [""BIS_download_pauseTimestamp"", nil];" \n
                         "_object setVariable [""BIS_download_thread"", nil];" \n
                         "_object setVariable [""BIS_download_getPlayers"", nil];" \n
                         "_object setVariable [""BIS_download_NMInterval"", nil];" \n
                         "_object setVariable [""BIS_download_NMTime"", nil];" \n
                         "_object setVariable [""BIS_download_logEnabled"", nil];" \n
                         "_object setVariable [""BIS_download_players"", nil];" \n
                         "_object setVariable [""BIS_download_aborted"", nil];" \n
                         "" \n
                         "// Close Upload Terminal" \n
                         "if (_object isKindOf ""Land_DataTerminal_01_F"") then" \n
                         "{" \n
                         "	[_object, 0] call BIS_fnc_DataTerminalAnimate;" \n
                         "};" \n
                         "" \n
                         "// Log" \n
                         "if (_object getVariable [""BIS_download_logEnabled"", true]) then" \n
                         "{" \n
                         "	""Download.fsm: Failed"" call BIS_fnc_log;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "__2">*/
                class __2
                {
                        name = "__2";
                        itemno = 8;
                        init = /*%FSM<STATEINIT""">*/"// The uploading side" \n
                         "if (_isUpload) then" \n
                         "{" \n
                         "	// Reset upload side" \n
                         "	missionNamespace setVariable [""BIS_upload_side"", nil, true];" \n
                         "	[true, ""onUploadStateChanged"", nil] remoteExec [""BIS_fnc_callScriptedEventHandler""];" \n
                         "" \n
                         "	// Set schematics state" \n
                         "	[""UploadEnd""] call bis_fnc_moduleMPTypeHvt_carrier;" \n
                         "};" \n
                         "" \n
                         "private ""_list"";" \n
                         "_list = _object getVariable [""BIS_hvt_intelDownloadedBy"", []];" \n
                         "" \n
                         "if (!(_side in _list) && { !isNull _objective }) then" \n
                         "{" \n
                         "	_list pushBack _side;" \n
                         "	_object setVariable [""BIS_hvt_intelDownloadedBy"", _list, true];" \n
                         "	[""RegisterWinner"", [_objective, _side]] call BIS_fnc_moduleHvtObjective;" \n
                         "};" \n
                         "" \n
                         "// Make object destructible" \n
                         "[[_object, true], ""allowDamage"", true, true] call BIS_fnc_mp;" \n
                         "" \n
                         "// Conversations" \n
                         "if (_isDestroyable && count _list < 2) then" \n
                         "{" \n
                         "	[_side, _object] spawn" \n
                         "	{" \n
                         "		scriptName ""Download.fsm: Delay conversation IntelShouldDestroy"";" \n
                         "		" \n
                         "		sleep 6;" \n
                         "" \n
                         "		if (isNil { BIS_hvt_endGame } && alive (_this select 1)) then" \n
                         "		{" \n
                         "			[""IntelShouldDestroy"", _this select 0] call bis_fnc_moduleMPTypeHvt_conversations;" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "// Hacker Achievement" \n
                         "{" \n
                         "	if (!isNull _x) then" \n
                         "	{" \n
                         "		[[""UnlockAchievement""], ""bis_fnc_moduleMPTypeHvt_downloadProgress"", _x, false] call BIS_fnc_mp;" \n
                         "	};" \n
                         "} forEach (_object getVariable [""BIS_download_players"", []]);" \n
                         "" \n
                         "// Terminate thread" \n
                         "terminate (_object getVariable ""BIS_download_thread"");" \n
                         "" \n
                         "// Reset object variables" \n
                         "_object setVariable [""BIS_download_side"", nil, true];" \n
                         "_object setVariable [""BIS_download_progress"", nil, true];" \n
                         "_object setVariable [""BIS_download_speed"", nil, true];" \n
                         "_object setVariable [""BIS_download_rate"", nil];" \n
                         "_object setVariable [""BIS_download_pauseTimestamp"", nil];" \n
                         "_object setVariable [""BIS_download_thread"", nil];" \n
                         "_object setVariable [""BIS_download_getPlayers"", nil];" \n
                         "_object setVariable [""BIS_download_NMInterval"", nil];" \n
                         "_object setVariable [""BIS_download_NMTime"", nil];" \n
                         "_object setVariable [""BIS_download_logEnabled"", nil];" \n
                         "_object setVariable [""BIS_download_players"", nil];" \n
                         "_object setVariable [""BIS_download_aborted"", nil];" \n
                         "" \n
                         "// Close Upload Terminal" \n
                         "if (_object isKindOf ""Land_DataTerminal_01_F"") then" \n
                         "{" \n
                         "	[_object, 0] call BIS_fnc_DataTerminalAnimate;" \n
                         "};" \n
                         "" \n
                         "// Download / Upload completed event handler" \n
                         "[[missionNamespace, ""EndGame_OnDownloadCompleted"", [_side, _isUpload], false], ""BIS_fnc_callScriptedEventHandler"", true, false, true] call BIS_fnc_mp;" \n
                         "" \n
                         "// Log" \n
                         "if (_object getVariable [""BIS_download_logEnabled"", true]) then" \n
                         "{" \n
                         "	""Download.fsm: Succeeded"" call BIS_fnc_log;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "pause_download">*/
                class pause_download
                {
                        name = "pause_download";
                        itemno = 12;
                        init = /*%FSM<STATEINIT""">*/"// Set speed to zero to pause download" \n
                         "_object setVariable [""BIS_download_speed"", 0.0, true];" \n
                         "" \n
                         "// Store pause timestamp" \n
                         "_object setVariable [""BIS_download_pauseTimestamp"", time];" \n
                         "" \n
                         "// Log" \n
                         "if (_object getVariable [""BIS_download_logEnabled"", true]) then" \n
                         "{" \n
                         "	[""Download.fsm / Pause Download: %1 / %2 / %3"", _objective, _object, _player] call BIS_fnc_logFormat;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "failed">*/
                                class failed
                                {
                                        itemno = 2;
                                        priority = 2.000000;
                                        to="__1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private [""_downloadSpeed"", ""_downloadPauseTimestamp"", ""_downloadPaused"", ""_pauseTime""];" \n
                                         "_downloadSpeed 					= _object getVariable [""BIS_download_speed"", 1.0];" \n
                                         "_downloadPauseTimestamp			= _object getVariable [""BIS_download_pauseTimestamp"", -1];" \n
                                         "_downloadPaused					= _downloadSpeed <= 0;" \n
                                         "_pauseTime							= time - _downloadPauseTimestamp;" \n
                                         "" \n
                                         "!isNil { _object getVariable ""BIS_hvt_intelDestroyed"" }" \n
                                         "||" \n
                                         "{ (!isNull _objective && !isNil { BIS_hvt_endGame }) }" \n
                                         "||" \n
                                         "{ _object getVariable [""BIS_download_aborted"", false] }" \n
                                         "||" \n
                                         "{ ( _downloadPauseTimestamp != -1 && _downloadPaused && _pauseTime > _pauseTimeThreshold) }" \n
                                         "||" \n
                                         "{ count ([_object, _maxDistance + 5, _side] call (_object getVariable ""BIS_download_getPlayers"")) < 1 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "succeeded">*/
                                class succeeded
                                {
                                        itemno = 3;
                                        priority = 1.000000;
                                        to="__2";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_object getVariable [""BIS_download_side"", sideUnknown] == _side" \n
                                         "&&" \n
                                         "{ _object getVariable [""BIS_download_progress"", 0.0] >= 1.0 }" \n
                                         "&&" \n
                                         "{ _object getVariable [""BIS_download_speed"", 0.0] > 0.0 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "unpaused">*/
                                class unpaused
                                {
                                        itemno = 13;
                                        priority = 0.000000;
                                        to="start_continue_d";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"count ([_object, _maxDistance, _side] call (_object getVariable ""BIS_download_getPlayers"")) > 0"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"// Set speed back to defaults" \n
                                         "_object setVariable [""BIS_download_speed"", 1.0];"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "post_init">*/
                class post_init
                {
                        name = "post_init";
                        itemno = 14;
                        init = /*%FSM<STATEINIT""">*/"// The uploading side" \n
                         "if (_isUpload) then" \n
                         "{" \n
                         "	// Set upload side" \n
                         "	missionNamespace setVariable [""BIS_upload_side"", _side, true];" \n
                         "	[true, ""onUploadStateChanged"", [_side]] remoteExec [""BIS_fnc_callScriptedEventHandler""];" \n
                         "" \n
                         "	// Set uploading state" \n
                         "	[""SetState"", [""Uploading""]] call BIS_fnc_moduleMPTypeHvt_carrier;" \n
                         "" \n
                         "	// Reset carrier" \n
                         "	[""ResetCarrier"", []] call BIS_fnc_moduleMPTypeHvt_carrier;" \n
                         "" \n
                         "	// Lock it to the opposing side, uploading side should have no interaction with schematics object while the enemy can pick it up" \n
                         "	[""Lock"", [_oppositeSide]] call BIS_fnc_moduleMPTypeHvt_carrier;" \n
                         "" \n
                         "	// The schematics object" \n
                         "	private ""_pickup"";" \n
                         "	_pickup = [""GetPickupObject""] call BIS_fnc_moduleMPTypeHvt_carrier;" \n
                         "" \n
                         "	// Silent drop of schematics" \n
                         "	[""SetVisibility"", [true]] call BIS_fnc_moduleMPTypeHvt_carrier;" \n
                         "	_pickup setDir getDirVisual _player;" \n
                         "	_pickup setPosASL getPosASLVisual _player;" \n
                         "};" \n
                         "" \n
                         "// Initialize data" \n
                         "_object setVariable [""BIS_download_side"", _side, true];" \n
                         "_object setVariable [""BIS_download_progress"", 0.0, true];" \n
                         "_object setVariable [""BIS_download_speed"", 1.0, true];" \n
                         "_object setVariable [""BIS_download_rate"", 0.001];" \n
                         "_object setVariable [""BIS_download_pauseTimestamp"", -1];" \n
                         "_object setVariable [""BIS_download_NMInterval"", 3.0];" \n
                         "_object setVariable [""BIS_download_NMTime"", -1];" \n
                         "_object setVariable [""BIS_download_logEnabled"", true];" \n
                         "_object setVariable [""BIS_download_players"", []];" \n
                         "_object setVariable [""BIS_download_aborted"", false];" \n
                         "_object setVariable [""BIS_download_isUpload"", _isUpload, true];" \n
                         "" \n
                         "// Local function which returns the players which are currently contributing to the download" \n
                         "_object setVariable [""BIS_download_getPlayers""," \n
                         "{" \n
                         "	private [""_center"", ""_radius"", ""_side""];" \n
                         "	_center		= [_this, 0, objNull, [objNull]] call BIS_fnc_param;" \n
                         "	_radius	= [_this, 1, 10, [0]] call BIS_fnc_param;" \n
                         "	_side 		= [_this, 2, sideUnknown, [sideUnknown]] call BIS_fnc_param;" \n
                         "	" \n
                         "	private [""_nearEntities"", ""_nearPlayers""];" \n
                         "	_nearEntities 	= _center nearEntities [""Man"", _radius];" \n
                         "	_nearPlayers 	= [];" \n
                         "	" \n
                         "	{" \n
                         "		if (isPlayer _x && vehicle _x == _x && side group _x == _side && !(_x getVariable [""BIS_revive_incapacitated"", false])) then" \n
                         "		{" \n
                         "			_nearPlayers pushBack _x;" \n
                         "		};" \n
                         "	} forEach _nearEntities;" \n
                         "" \n
                         "	_nearPlayers;" \n
                         "}];" \n
                         "" \n
                         "// Spawn thread" \n
                         "_object setVariable [""BIS_download_thread"", [_objective, _object, _player, _downloadTime, _maxDistance, _isDestroyable, _pauseTimeThreshold, _isUpload, _side] spawn" \n
                         "{" \n
                         "	scriptName ""Download.fsm: Thread"";" \n
                         "	" \n
                         "	private [""_objective"", ""_object"", ""_player"", ""_downloadTime"", ""_maxDistance"", ""_isDestroyable"", ""_pauseTimeThreshold"", ""_isUpload"", ""_side""];" \n
                         "	_objective				= [_this, 0, objNull, [objNull]] call BIS_fnc_param;" \n
                         "	_object					= [_this, 1, objNull, [objNull]] call BIS_fnc_param;" \n
                         "	_player 				= [_this, 2, objNull, [objNull]] call BIS_fnc_param;" \n
                         "	_downloadTime 		= [_this, 3, 60, [0]] call BIS_fnc_param;" \n
                         "	_maxDistance			= [_this, 4, 10, [0]] call BIS_fnc_param;" \n
                         "	_isDestroyable			= [_this, 5, true, [true]] call BIS_fnc_param;" \n
                         "	_pauseTimeThreshold	= [_this, 6, 5, [0]] call BIS_fnc_param;" \n
                         "	_isUpload				= [_this, 7, false, [false]] call BIS_fnc_param;" \n
                         "	_side					= [_this, 8, sideUnknown, [sideUnknown]] call BIS_fnc_param;" \n
                         "" \n
                         "	while { !isNil { _object getVariable ""BIS_download_side"" } } do" \n
                         "	{" \n
                         "		private [""_downloadRate"", ""_downloadSpeed"", ""_downloadSpeedReal"", ""_downloadProgress"", ""_downloadPaused"", ""_downloadPlayers""];" \n
                         "		_downloadRate 		= _object getVariable [""BIS_download_rate"", 0.001];" \n
                         "		_downloadSpeed 		= _object getVariable [""BIS_download_speed"", 1.0];" \n
                         "		_downloadSpeedReal	= _downloadSpeed;" \n
                         "		_downloadProgress 	= _object getVariable [""BIS_download_progress"", 0.0];" \n
                         "		_downloadPaused		= _downloadSpeed <= 0.0;" \n
                         "		_downloadPlayers		= [_object, _maxDistance, _side] call (_object getVariable ""BIS_download_getPlayers"");" \n
                         "" \n
                         "		// The registered players" \n
                         "		private ""_registeredPlayers"";" \n
                         "		_registeredPlayers = _object getVariable [""BIS_download_players"", []];" \n
                         "" \n
                         "		// Check whether non registered players are now downloading, if so, register them" \n
                         "		{" \n
                         "			if !(_x in _registeredPlayers) then" \n
                         "			{" \n
                         "				_registeredPlayers pushBack _x;" \n
                         "				_object setVariable [""BIS_download_players"", _registeredPlayers];" \n
                         "			};" \n
                         "		} forEach _downloadPlayers;" \n
                         "" \n
                         "		if (!_downloadPaused) then" \n
                         "		{" \n
                         "			_downloadSpeedReal = _downloadSpeedReal * count _downloadPlayers;" \n
                         "		};" \n
                         "" \n
                         "		// The actual download/upload progress, from 0.0 to 1.0" \n
                         "		private [""_oldProgress"", ""_newProgress""];" \n
                         "		_oldProgress	= _downloadProgress;" \n
                         "		_newProgress 	= _downloadProgress + (_downloadSpeedReal * _downloadRate);" \n
                         "	" \n
                         "		// Do timed network updates, but always update locally" \n
                         "		private [""_lastUpdateTime"", ""_interval""];" \n
                         "		_lastUpdateTime 	= _object getVariable [""BIS_download_NMTime"", -1];" \n
                         "		_interval			= _object getVariable [""BIS_download_NMInterval"", 3.0];" \n
                         "		" \n
                         "		// Make sure progress actually changed" \n
                         "		if (_newProgress != _oldProgress) then" \n
                         "		{" \n
                         "			if (time >= _lastUpdateTime + _interval) then" \n
                         "			{" \n
                         "				// Register new network message time" \n
                         "				_object setVariable [""BIS_download_NMTime"", time];" \n
                         "				" \n
                         "				// Update progress publicly" \n
                         "				_object setVariable [""BIS_download_progress"", _newProgress, true];" \n
                         "			}" \n
                         "			else" \n
                         "			{" \n
                         "				// Update progress locally" \n
                         "				_object setVariable [""BIS_download_progress"", _newProgress];" \n
                         "			};" \n
                         "		};" \n
                         "		" \n
                         "		sleep 0.1;" \n
                         "	};" \n
                         "}];" \n
                         "" \n
                         "// Open Upload Terminal" \n
                         "if (_object isKindOf ""Land_DataTerminal_01_F"") then" \n
                         "{" \n
                         "	[_object, 3] call BIS_fnc_DataTerminalAnimate;" \n
                         "};" \n
                         "" \n
                         "// Log" \n
                         "if (_object getVariable [""BIS_download_logEnabled"", true]) then" \n
                         "{" \n
                         "	[""Download.fsm / Post Init: %1 / %2 / %3"", _object, _player, _side] call BIS_fnc_logFormat;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 15;
                                        priority = 0.000000;
                                        to="start_continue_d";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="init";
        finalStates[] =
        {
                "_",
                "__1",
                "__2",
        };
};
/*%FSM</COMPILE>*/